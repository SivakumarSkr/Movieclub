# Generated by Django 2.1.7 on 2019-06-06 18:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import markdownx.models
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('contents', '0006_auto_20190606_2312'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('watched', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('D', 'Draft'), ('P', 'Published')], default='D', max_length=1)),
                ('contents', markdownx.models.MarkdownxField()),
                ('heading', models.CharField(max_length=300)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True)),
                ('disliked', models.ManyToManyField(related_name='blog_disliked', to=settings.AUTH_USER_MODEL)),
                ('liked', models.ManyToManyField(related_name='blog_liked', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='answer',
            name='status',
            field=models.CharField(choices=[('D', 'Draft'), ('P', 'Published')], default='D', max_length=1),
        ),
        migrations.AddField(
            model_name='answer',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='review',
            name='spoiler_alert',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='review',
            name='status',
            field=models.CharField(choices=[('D', 'Draft'), ('P', 'Published')], default='D', max_length=1),
        ),
        migrations.AddField(
            model_name='review',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AlterField(
            model_name='answer',
            name='contents',
            field=markdownx.models.MarkdownxField(),
        ),
        migrations.AlterField(
            model_name='review',
            name='contents',
            field=markdownx.models.MarkdownxField(),
        ),
    ]
